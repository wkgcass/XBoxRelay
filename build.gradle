plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10' apply false
    id 'org.beryx.jlink' version '2.26.0' apply false
    id 'maven-publish'
    id 'signing'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'application'
    if (['agent', 'ui-main'].contains(project.name)) {
        apply plugin: 'org.beryx.jlink'
    }
    if (['base', 'ui'].contains(project.name)) {
        apply plugin: 'maven-publish'
        apply plugin: 'signing'
    }

    group 'net.cassite'
    version '0.0.1'

    sourceCompatibility = '17'
    targetCompatibility = '17'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }

    javadoc {
        exclude '**/*.java'
    }

    if (['agent', 'ui-main'].contains(project.name)) {
        jlink {
            options = ['--compress', '2', '--no-header-files', '--no-man-pages']
            launcher {
                if (project.name == 'agent') {
                    name = 'agent'
                    jvmArgs = ['-Xmx32m']
                } else {
                    name = 'app'
                    jvmArgs = ['-Xmx128m', '-Djava.library.path=%TEMP%', '-Dio.vproxy.vfx.logLevel=INFO']
                }
            }
            mergedModule {
                additive = true
                uses 'io.vertx.core.spi.VertxServiceProvider'
                uses 'io.vertx.core.spi.VerticleFactory'
                uses 'io.vertx.core.spi.JsonFactory'
                uses 'io.vertx.core.spi.launcher.CommandFactory'
            }
            forceMerge 'kotlin'
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    if (['base', 'ui'].contains(project.name)) {
        publishing {
            publications {
                maven(MavenPublication) {
                    from components.java
                    artifactId 'xboxrelay-' + project.name

                    pom {
                        name = 'net.cassite.xboxrelay.' + project.name
                        description = 'xboxrelay ' + project.name
                        url = 'https://github.com/wkgcass/XBoxRelay'
                        licenses {
                            license {
                                name = 'GPLv2 with Classpath Exception'
                                url = 'https://github.com/wkgcass/XBoxRelay/blob/master/LICENSE'
                            }
                        }
                        developers {
                            developer {
                                id = 'wkgcass'
                                name = 'K.G. Wang'
                                email = 'wkgcass@hotmail.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:git://github.com/wkgcass/XBoxRelay.git'
                            developerConnection = 'scm:git:git://github.com/wkgcass/XBoxRelay.git'
                            url = 'https://github.com/wkgcass/XBoxRelay'
                        }
                    }

                    pom.withXml {
                        def pomNode = asNode()
                        pomNode.dependencies.'*'.findAll() {
                            ['org.openjfx', 'org.jetbrains.kotlin'].contains(it.groupId.text())
                        }.each {
                            it.parent().remove(it)
                        }
                    }
                }
            }
            repositories {
                maven {
                    credentials {
                        username 'wkgcass'
                        password System.getProperty("MavenPublishPassword")
                    }
                    def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    url = releasesRepoUrl
                }
            }
        }
        signing {
            sign(publishing.publications["maven"])
        }
    }
}

project(":base") {
    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.31"
        api(group: 'io.vproxy', name: 'vjson') {
          exclude group: 'io.vproxy', module: 'kotlin-stdlib-lite'
        }
        api(group: 'io.vproxy', name: 'commons', version: '1.0.2') {
          exclude group: 'io.vproxy', module: 'kotlin-stdlib-lite'
        }
        api group: 'io.vertx', name: 'vertx-core', version: '4.3.7'
        api group: 'io.projectreactor.tools', name: 'blockhound', version: '1.0.6.RELEASE'
    }
}

project(":agent") {
    application {
        mainModule = 'net.cassite.xboxrelay.agent'
        mainClass = 'net.cassite.xboxrelay.agent.Main'
    }

    dependencies {
        implementation project(":base")
    }
    task runAgent(type: JavaExec) {
        classpath = sourceSets.main.runtimeClasspath
        main = "net.cassite.xboxrelay.agent.Main"
        var loglevel = System.getProperty("LogLevel")
        if (loglevel != null) {
            args = ["--log-level=" + loglevel]
        }
    }
}

project(":ui") {
    apply plugin: 'org.openjfx.javafxplugin'

    javafx {
        version = '17.0.1'
        modules = ['javafx.controls', 'javafx.swing', 'javafx.media']
    }

    dependencies {
        api project(":base")
        api(group: 'io.vproxy', name: 'vfx', version: '1.3.0') {
          exclude group: 'io.vproxy', module: 'kotlin-stdlib-lite'
        }
        api group: 'net.java.dev.jna', name: 'jna', version: '5.12.1'
        api group: 'net.java.dev.jna', name: 'jna-platform', version: '5.12.1'
    }
}

project(":ui-main") {
    apply plugin: 'org.openjfx.javafxplugin'

    application {
        mainModule = 'net.cassite.xboxrelay.uimain'
        mainClass = 'net.cassite.xboxrelay.uimain.Main'
    }

    javafx {
        version = '17.0.1'
        modules = ['javafx.controls', 'javafx.swing', 'javafx.media']
    }

    dependencies {
        implementation project(":ui")
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: '1.5.31'
    }

    task runUI(type: JavaExec) {
        classpath = sourceSets.main.runtimeClasspath
        main = "net.cassite.xboxrelay.uimain.Main"
        var logLevel = System.getProperty("io.vproxy.vfx.logLevel")
        if (logLevel != null) {
            systemProperty("io.vproxy.vfx.logLevel", logLevel)
        }
    }
}
